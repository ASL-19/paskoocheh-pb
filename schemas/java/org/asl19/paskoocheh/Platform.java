// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paskoocheh.proto

package org.asl19.paskoocheh;

/**
 * Protobuf type {@code org.asl19.paskoocheh.Platform}
 */
public final class Platform extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:org.asl19.paskoocheh.Platform)
    PlatformOrBuilder {
  // Use Platform.newBuilder() to construct.
  private Platform(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private Platform(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final Platform defaultInstance;
  public static Platform getDefaultInstance() {
    return defaultInstance;
  }

  public Platform getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private Platform(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();
            org.asl19.paskoocheh.PlatformName value = org.asl19.paskoocheh.PlatformName.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              name_ = value;
            }
            break;
          }
          case 16: {
            int rawValue = input.readEnum();
            org.asl19.paskoocheh.PlatformType value = org.asl19.paskoocheh.PlatformType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(2, rawValue);
            } else {
              bitField0_ |= 0x00000002;
              type_ = value;
            }
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              tools_ = new java.util.ArrayList<org.asl19.paskoocheh.Tool>();
              mutable_bitField0_ |= 0x00000004;
            }
            tools_.add(input.readMessage(org.asl19.paskoocheh.Tool.PARSER, extensionRegistry));
            break;
          }
          case 162: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              update_ = new java.util.ArrayList<org.asl19.paskoocheh.Message>();
              mutable_bitField0_ |= 0x00000008;
            }
            update_.add(input.readMessage(org.asl19.paskoocheh.Message.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        tools_ = java.util.Collections.unmodifiableList(tools_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        update_ = java.util.Collections.unmodifiableList(update_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.asl19.paskoocheh.Paskoocheh.internal_static_org_asl19_paskoocheh_Platform_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.asl19.paskoocheh.Paskoocheh.internal_static_org_asl19_paskoocheh_Platform_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.asl19.paskoocheh.Platform.class, org.asl19.paskoocheh.Platform.Builder.class);
  }

  public static com.google.protobuf.Parser<Platform> PARSER =
      new com.google.protobuf.AbstractParser<Platform>() {
    public Platform parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Platform(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<Platform> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private org.asl19.paskoocheh.PlatformName name_;
  /**
   * <code>required .org.asl19.paskoocheh.PlatformName name = 1;</code>
   *
   * <pre>
   * Platform name
   * </pre>
   */
  public boolean hasName() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required .org.asl19.paskoocheh.PlatformName name = 1;</code>
   *
   * <pre>
   * Platform name
   * </pre>
   */
  public org.asl19.paskoocheh.PlatformName getName() {
    return name_;
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private org.asl19.paskoocheh.PlatformType type_;
  /**
   * <code>required .org.asl19.paskoocheh.PlatformType type = 2;</code>
   *
   * <pre>
   * Platform type
   * </pre>
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required .org.asl19.paskoocheh.PlatformType type = 2;</code>
   *
   * <pre>
   * Platform type
   * </pre>
   */
  public org.asl19.paskoocheh.PlatformType getType() {
    return type_;
  }

  public static final int TOOLS_FIELD_NUMBER = 3;
  private java.util.List<org.asl19.paskoocheh.Tool> tools_;
  /**
   * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
   *
   * <pre>
   * Different tools for this platform
   * </pre>
   */
  public java.util.List<org.asl19.paskoocheh.Tool> getToolsList() {
    return tools_;
  }
  /**
   * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
   *
   * <pre>
   * Different tools for this platform
   * </pre>
   */
  public java.util.List<? extends org.asl19.paskoocheh.ToolOrBuilder> 
      getToolsOrBuilderList() {
    return tools_;
  }
  /**
   * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
   *
   * <pre>
   * Different tools for this platform
   * </pre>
   */
  public int getToolsCount() {
    return tools_.size();
  }
  /**
   * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
   *
   * <pre>
   * Different tools for this platform
   * </pre>
   */
  public org.asl19.paskoocheh.Tool getTools(int index) {
    return tools_.get(index);
  }
  /**
   * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
   *
   * <pre>
   * Different tools for this platform
   * </pre>
   */
  public org.asl19.paskoocheh.ToolOrBuilder getToolsOrBuilder(
      int index) {
    return tools_.get(index);
  }

  public static final int UPDATE_FIELD_NUMBER = 20;
  private java.util.List<org.asl19.paskoocheh.Message> update_;
  /**
   * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
   *
   * <pre>
   * Update messages that are platform specific
   * </pre>
   */
  public java.util.List<org.asl19.paskoocheh.Message> getUpdateList() {
    return update_;
  }
  /**
   * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
   *
   * <pre>
   * Update messages that are platform specific
   * </pre>
   */
  public java.util.List<? extends org.asl19.paskoocheh.MessageOrBuilder> 
      getUpdateOrBuilderList() {
    return update_;
  }
  /**
   * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
   *
   * <pre>
   * Update messages that are platform specific
   * </pre>
   */
  public int getUpdateCount() {
    return update_.size();
  }
  /**
   * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
   *
   * <pre>
   * Update messages that are platform specific
   * </pre>
   */
  public org.asl19.paskoocheh.Message getUpdate(int index) {
    return update_.get(index);
  }
  /**
   * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
   *
   * <pre>
   * Update messages that are platform specific
   * </pre>
   */
  public org.asl19.paskoocheh.MessageOrBuilder getUpdateOrBuilder(
      int index) {
    return update_.get(index);
  }

  private void initFields() {
    name_ = org.asl19.paskoocheh.PlatformName.WINDOWS;
    type_ = org.asl19.paskoocheh.PlatformType.DESKTOP;
    tools_ = java.util.Collections.emptyList();
    update_ = java.util.Collections.emptyList();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasName()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    for (int i = 0; i < getToolsCount(); i++) {
      if (!getTools(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    for (int i = 0; i < getUpdateCount(); i++) {
      if (!getUpdate(i).isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeEnum(1, name_.getNumber());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeEnum(2, type_.getNumber());
    }
    for (int i = 0; i < tools_.size(); i++) {
      output.writeMessage(3, tools_.get(i));
    }
    for (int i = 0; i < update_.size(); i++) {
      output.writeMessage(20, update_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, name_.getNumber());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, type_.getNumber());
    }
    for (int i = 0; i < tools_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, tools_.get(i));
    }
    for (int i = 0; i < update_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, update_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.asl19.paskoocheh.Platform)) {
      return super.equals(obj);
    }
    org.asl19.paskoocheh.Platform other = (org.asl19.paskoocheh.Platform) obj;

    boolean result = true;
    result = result && (hasName() == other.hasName());
    if (hasName()) {
      result = result &&
          (getName() == other.getName());
    }
    result = result && (hasType() == other.hasType());
    if (hasType()) {
      result = result &&
          (getType() == other.getType());
    }
    result = result && getToolsList()
        .equals(other.getToolsList());
    result = result && getUpdateList()
        .equals(other.getUpdateList());
    result = result &&
        getUnknownFields().equals(other.getUnknownFields());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashEnum(
          getName());
    }
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashEnum(
          getType());
    }
    if (getToolsCount() > 0) {
      hash = (37 * hash) + TOOLS_FIELD_NUMBER;
      hash = (53 * hash) + getToolsList().hashCode();
    }
    if (getUpdateCount() > 0) {
      hash = (37 * hash) + UPDATE_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.asl19.paskoocheh.Platform parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.asl19.paskoocheh.Platform parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.asl19.paskoocheh.Platform parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.asl19.paskoocheh.Platform parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.asl19.paskoocheh.Platform parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.asl19.paskoocheh.Platform parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.asl19.paskoocheh.Platform parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.asl19.paskoocheh.Platform parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.asl19.paskoocheh.Platform parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.asl19.paskoocheh.Platform parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.asl19.paskoocheh.Platform prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.asl19.paskoocheh.Platform}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.asl19.paskoocheh.Platform)
      org.asl19.paskoocheh.PlatformOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.asl19.paskoocheh.Paskoocheh.internal_static_org_asl19_paskoocheh_Platform_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.asl19.paskoocheh.Paskoocheh.internal_static_org_asl19_paskoocheh_Platform_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.asl19.paskoocheh.Platform.class, org.asl19.paskoocheh.Platform.Builder.class);
    }

    // Construct using org.asl19.paskoocheh.Platform.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getToolsFieldBuilder();
        getUpdateFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      name_ = org.asl19.paskoocheh.PlatformName.WINDOWS;
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = org.asl19.paskoocheh.PlatformType.DESKTOP;
      bitField0_ = (bitField0_ & ~0x00000002);
      if (toolsBuilder_ == null) {
        tools_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        toolsBuilder_.clear();
      }
      if (updateBuilder_ == null) {
        update_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        updateBuilder_.clear();
      }
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.asl19.paskoocheh.Paskoocheh.internal_static_org_asl19_paskoocheh_Platform_descriptor;
    }

    public org.asl19.paskoocheh.Platform getDefaultInstanceForType() {
      return org.asl19.paskoocheh.Platform.getDefaultInstance();
    }

    public org.asl19.paskoocheh.Platform build() {
      org.asl19.paskoocheh.Platform result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.asl19.paskoocheh.Platform buildPartial() {
      org.asl19.paskoocheh.Platform result = new org.asl19.paskoocheh.Platform(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.name_ = name_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.type_ = type_;
      if (toolsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          tools_ = java.util.Collections.unmodifiableList(tools_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.tools_ = tools_;
      } else {
        result.tools_ = toolsBuilder_.build();
      }
      if (updateBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          update_ = java.util.Collections.unmodifiableList(update_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.update_ = update_;
      } else {
        result.update_ = updateBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.asl19.paskoocheh.Platform) {
        return mergeFrom((org.asl19.paskoocheh.Platform)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.asl19.paskoocheh.Platform other) {
      if (other == org.asl19.paskoocheh.Platform.getDefaultInstance()) return this;
      if (other.hasName()) {
        setName(other.getName());
      }
      if (other.hasType()) {
        setType(other.getType());
      }
      if (toolsBuilder_ == null) {
        if (!other.tools_.isEmpty()) {
          if (tools_.isEmpty()) {
            tools_ = other.tools_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureToolsIsMutable();
            tools_.addAll(other.tools_);
          }
          onChanged();
        }
      } else {
        if (!other.tools_.isEmpty()) {
          if (toolsBuilder_.isEmpty()) {
            toolsBuilder_.dispose();
            toolsBuilder_ = null;
            tools_ = other.tools_;
            bitField0_ = (bitField0_ & ~0x00000004);
            toolsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getToolsFieldBuilder() : null;
          } else {
            toolsBuilder_.addAllMessages(other.tools_);
          }
        }
      }
      if (updateBuilder_ == null) {
        if (!other.update_.isEmpty()) {
          if (update_.isEmpty()) {
            update_ = other.update_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureUpdateIsMutable();
            update_.addAll(other.update_);
          }
          onChanged();
        }
      } else {
        if (!other.update_.isEmpty()) {
          if (updateBuilder_.isEmpty()) {
            updateBuilder_.dispose();
            updateBuilder_ = null;
            update_ = other.update_;
            bitField0_ = (bitField0_ & ~0x00000008);
            updateBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getUpdateFieldBuilder() : null;
          } else {
            updateBuilder_.addAllMessages(other.update_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasName()) {
        
        return false;
      }
      if (!hasType()) {
        
        return false;
      }
      for (int i = 0; i < getToolsCount(); i++) {
        if (!getTools(i).isInitialized()) {
          
          return false;
        }
      }
      for (int i = 0; i < getUpdateCount(); i++) {
        if (!getUpdate(i).isInitialized()) {
          
          return false;
        }
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.asl19.paskoocheh.Platform parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.asl19.paskoocheh.Platform) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private org.asl19.paskoocheh.PlatformName name_ = org.asl19.paskoocheh.PlatformName.WINDOWS;
    /**
     * <code>required .org.asl19.paskoocheh.PlatformName name = 1;</code>
     *
     * <pre>
     * Platform name
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .org.asl19.paskoocheh.PlatformName name = 1;</code>
     *
     * <pre>
     * Platform name
     * </pre>
     */
    public org.asl19.paskoocheh.PlatformName getName() {
      return name_;
    }
    /**
     * <code>required .org.asl19.paskoocheh.PlatformName name = 1;</code>
     *
     * <pre>
     * Platform name
     * </pre>
     */
    public Builder setName(org.asl19.paskoocheh.PlatformName value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required .org.asl19.paskoocheh.PlatformName name = 1;</code>
     *
     * <pre>
     * Platform name
     * </pre>
     */
    public Builder clearName() {
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = org.asl19.paskoocheh.PlatformName.WINDOWS;
      onChanged();
      return this;
    }

    private org.asl19.paskoocheh.PlatformType type_ = org.asl19.paskoocheh.PlatformType.DESKTOP;
    /**
     * <code>required .org.asl19.paskoocheh.PlatformType type = 2;</code>
     *
     * <pre>
     * Platform type
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .org.asl19.paskoocheh.PlatformType type = 2;</code>
     *
     * <pre>
     * Platform type
     * </pre>
     */
    public org.asl19.paskoocheh.PlatformType getType() {
      return type_;
    }
    /**
     * <code>required .org.asl19.paskoocheh.PlatformType type = 2;</code>
     *
     * <pre>
     * Platform type
     * </pre>
     */
    public Builder setType(org.asl19.paskoocheh.PlatformType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required .org.asl19.paskoocheh.PlatformType type = 2;</code>
     *
     * <pre>
     * Platform type
     * </pre>
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      type_ = org.asl19.paskoocheh.PlatformType.DESKTOP;
      onChanged();
      return this;
    }

    private java.util.List<org.asl19.paskoocheh.Tool> tools_ =
      java.util.Collections.emptyList();
    private void ensureToolsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        tools_ = new java.util.ArrayList<org.asl19.paskoocheh.Tool>(tools_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        org.asl19.paskoocheh.Tool, org.asl19.paskoocheh.Tool.Builder, org.asl19.paskoocheh.ToolOrBuilder> toolsBuilder_;

    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public java.util.List<org.asl19.paskoocheh.Tool> getToolsList() {
      if (toolsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tools_);
      } else {
        return toolsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public int getToolsCount() {
      if (toolsBuilder_ == null) {
        return tools_.size();
      } else {
        return toolsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public org.asl19.paskoocheh.Tool getTools(int index) {
      if (toolsBuilder_ == null) {
        return tools_.get(index);
      } else {
        return toolsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder setTools(
        int index, org.asl19.paskoocheh.Tool value) {
      if (toolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureToolsIsMutable();
        tools_.set(index, value);
        onChanged();
      } else {
        toolsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder setTools(
        int index, org.asl19.paskoocheh.Tool.Builder builderForValue) {
      if (toolsBuilder_ == null) {
        ensureToolsIsMutable();
        tools_.set(index, builderForValue.build());
        onChanged();
      } else {
        toolsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder addTools(org.asl19.paskoocheh.Tool value) {
      if (toolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureToolsIsMutable();
        tools_.add(value);
        onChanged();
      } else {
        toolsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder addTools(
        int index, org.asl19.paskoocheh.Tool value) {
      if (toolsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureToolsIsMutable();
        tools_.add(index, value);
        onChanged();
      } else {
        toolsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder addTools(
        org.asl19.paskoocheh.Tool.Builder builderForValue) {
      if (toolsBuilder_ == null) {
        ensureToolsIsMutable();
        tools_.add(builderForValue.build());
        onChanged();
      } else {
        toolsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder addTools(
        int index, org.asl19.paskoocheh.Tool.Builder builderForValue) {
      if (toolsBuilder_ == null) {
        ensureToolsIsMutable();
        tools_.add(index, builderForValue.build());
        onChanged();
      } else {
        toolsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder addAllTools(
        java.lang.Iterable<? extends org.asl19.paskoocheh.Tool> values) {
      if (toolsBuilder_ == null) {
        ensureToolsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tools_);
        onChanged();
      } else {
        toolsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder clearTools() {
      if (toolsBuilder_ == null) {
        tools_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        toolsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public Builder removeTools(int index) {
      if (toolsBuilder_ == null) {
        ensureToolsIsMutable();
        tools_.remove(index);
        onChanged();
      } else {
        toolsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public org.asl19.paskoocheh.Tool.Builder getToolsBuilder(
        int index) {
      return getToolsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public org.asl19.paskoocheh.ToolOrBuilder getToolsOrBuilder(
        int index) {
      if (toolsBuilder_ == null) {
        return tools_.get(index);  } else {
        return toolsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public java.util.List<? extends org.asl19.paskoocheh.ToolOrBuilder> 
         getToolsOrBuilderList() {
      if (toolsBuilder_ != null) {
        return toolsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tools_);
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public org.asl19.paskoocheh.Tool.Builder addToolsBuilder() {
      return getToolsFieldBuilder().addBuilder(
          org.asl19.paskoocheh.Tool.getDefaultInstance());
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public org.asl19.paskoocheh.Tool.Builder addToolsBuilder(
        int index) {
      return getToolsFieldBuilder().addBuilder(
          index, org.asl19.paskoocheh.Tool.getDefaultInstance());
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Tool tools = 3;</code>
     *
     * <pre>
     * Different tools for this platform
     * </pre>
     */
    public java.util.List<org.asl19.paskoocheh.Tool.Builder> 
         getToolsBuilderList() {
      return getToolsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        org.asl19.paskoocheh.Tool, org.asl19.paskoocheh.Tool.Builder, org.asl19.paskoocheh.ToolOrBuilder> 
        getToolsFieldBuilder() {
      if (toolsBuilder_ == null) {
        toolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            org.asl19.paskoocheh.Tool, org.asl19.paskoocheh.Tool.Builder, org.asl19.paskoocheh.ToolOrBuilder>(
                tools_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        tools_ = null;
      }
      return toolsBuilder_;
    }

    private java.util.List<org.asl19.paskoocheh.Message> update_ =
      java.util.Collections.emptyList();
    private void ensureUpdateIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        update_ = new java.util.ArrayList<org.asl19.paskoocheh.Message>(update_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        org.asl19.paskoocheh.Message, org.asl19.paskoocheh.Message.Builder, org.asl19.paskoocheh.MessageOrBuilder> updateBuilder_;

    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public java.util.List<org.asl19.paskoocheh.Message> getUpdateList() {
      if (updateBuilder_ == null) {
        return java.util.Collections.unmodifiableList(update_);
      } else {
        return updateBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public int getUpdateCount() {
      if (updateBuilder_ == null) {
        return update_.size();
      } else {
        return updateBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public org.asl19.paskoocheh.Message getUpdate(int index) {
      if (updateBuilder_ == null) {
        return update_.get(index);
      } else {
        return updateBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder setUpdate(
        int index, org.asl19.paskoocheh.Message value) {
      if (updateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpdateIsMutable();
        update_.set(index, value);
        onChanged();
      } else {
        updateBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder setUpdate(
        int index, org.asl19.paskoocheh.Message.Builder builderForValue) {
      if (updateBuilder_ == null) {
        ensureUpdateIsMutable();
        update_.set(index, builderForValue.build());
        onChanged();
      } else {
        updateBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder addUpdate(org.asl19.paskoocheh.Message value) {
      if (updateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpdateIsMutable();
        update_.add(value);
        onChanged();
      } else {
        updateBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder addUpdate(
        int index, org.asl19.paskoocheh.Message value) {
      if (updateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpdateIsMutable();
        update_.add(index, value);
        onChanged();
      } else {
        updateBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder addUpdate(
        org.asl19.paskoocheh.Message.Builder builderForValue) {
      if (updateBuilder_ == null) {
        ensureUpdateIsMutable();
        update_.add(builderForValue.build());
        onChanged();
      } else {
        updateBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder addUpdate(
        int index, org.asl19.paskoocheh.Message.Builder builderForValue) {
      if (updateBuilder_ == null) {
        ensureUpdateIsMutable();
        update_.add(index, builderForValue.build());
        onChanged();
      } else {
        updateBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder addAllUpdate(
        java.lang.Iterable<? extends org.asl19.paskoocheh.Message> values) {
      if (updateBuilder_ == null) {
        ensureUpdateIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, update_);
        onChanged();
      } else {
        updateBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder clearUpdate() {
      if (updateBuilder_ == null) {
        update_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        updateBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public Builder removeUpdate(int index) {
      if (updateBuilder_ == null) {
        ensureUpdateIsMutable();
        update_.remove(index);
        onChanged();
      } else {
        updateBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public org.asl19.paskoocheh.Message.Builder getUpdateBuilder(
        int index) {
      return getUpdateFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public org.asl19.paskoocheh.MessageOrBuilder getUpdateOrBuilder(
        int index) {
      if (updateBuilder_ == null) {
        return update_.get(index);  } else {
        return updateBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public java.util.List<? extends org.asl19.paskoocheh.MessageOrBuilder> 
         getUpdateOrBuilderList() {
      if (updateBuilder_ != null) {
        return updateBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(update_);
      }
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public org.asl19.paskoocheh.Message.Builder addUpdateBuilder() {
      return getUpdateFieldBuilder().addBuilder(
          org.asl19.paskoocheh.Message.getDefaultInstance());
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public org.asl19.paskoocheh.Message.Builder addUpdateBuilder(
        int index) {
      return getUpdateFieldBuilder().addBuilder(
          index, org.asl19.paskoocheh.Message.getDefaultInstance());
    }
    /**
     * <code>repeated .org.asl19.paskoocheh.Message update = 20;</code>
     *
     * <pre>
     * Update messages that are platform specific
     * </pre>
     */
    public java.util.List<org.asl19.paskoocheh.Message.Builder> 
         getUpdateBuilderList() {
      return getUpdateFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        org.asl19.paskoocheh.Message, org.asl19.paskoocheh.Message.Builder, org.asl19.paskoocheh.MessageOrBuilder> 
        getUpdateFieldBuilder() {
      if (updateBuilder_ == null) {
        updateBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            org.asl19.paskoocheh.Message, org.asl19.paskoocheh.Message.Builder, org.asl19.paskoocheh.MessageOrBuilder>(
                update_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        update_ = null;
      }
      return updateBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:org.asl19.paskoocheh.Platform)
  }

  static {
    defaultInstance = new Platform(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.asl19.paskoocheh.Platform)
}

